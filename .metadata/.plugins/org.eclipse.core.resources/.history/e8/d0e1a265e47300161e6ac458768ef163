package main;
import java.util.stream.*;

import com.sun.javafx.collections.MappingChange.Map;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.function.*;
import java.util.List;
import java.lang.Math;
public class ProblemSet {
	public static void main(String[] args){
		ProblemSet ps = new ProblemSet();		
	}
	
	public ProblemSet(){
		//DotProduct testing
		System.out.println("Dot Product");
		System.out.println(DotProductTest(new int[]{2,4,6,8,10},new int[]{1,3,5,7,9}));
		//Hypotenuse Testing
		System.out.println("Hypotenuse");
		System.out.println(Hypotenuse(5,20));
		//SphereRadius
		System.out.println("Sphere Volume");
		System.out.println(SphereVolume(20.4));
		//Water Temperature
		System.out.println("Water Temperature");
		System.out.println(WaterTemp(190));
		//Double Sequence
		System.out.println("Double Sequence");
		System.out.println(Arrays.toString(DoubleSeq(new int[]{10,20,30,40,50})));
		//DuplicateSequence
		System.out.println("");
		System.out.println("Duplicate Sequence");
		System.out.println(DuplicateSeq(new String[] {"first","second","third","fourth"}));
		//Remove Duplicates
		System.out.println("Remove Duplicates");
		System.out.println(RemoveDuplicate(new String[]{"1","2","3","3","4","5","7","4","10","4","3","6"}));
		//Sum and Product
		System.out.println("");
		System.out.println("Sum and Product");
		System.out.println(SumProduct(new int[]{2,4,6,8,9},val->Arrays.stream(val).sum(),val->Arrays.stream(val).reduce((x,y)->(x*y)).getAsInt()));
		//ListofPosities
		System.out.println("List of Positives");
		System.out.println(PosList(new int[]{-2,3,6,8,-10,3,-29}));
		System.out.println("");
		//Max
		System.out.println("Max");
		System.out.println(MaxFind(new int[]{20,300,-120,3,55}));
		//FirstSquares
		System.out.println("First N Squares");
		System.out.println(NSquares(9));
		System.out.println("");
		//Translation
		System.out.println("Translation: Some say that programming is an art.");
		System.out.println(Translation("Some say that programming is an art."));
		//Count Articles
		System.out.println("Count Articles");
		System.out.println(CountArticles("An apple a day with an ape gives the doc a surprise with an even better outcome than a purple dog."));
		//List of Colors
		System.out.println("List of Colors");
		//System.out.println(ListOfColors("The quick brown fox jumped over the lazy red dog on a purple and green pasture of yellow flowers"));
		//Youngest
		System.out.println("Youngest Person");
	}
	
	public int DotProductTest(int[] a,int[] b){
		return IntStream.range(0,a.length).map(n->a[n]*b[n]).sum();
	}
	public double Hypotenuse(int base, int height){
		return (Math.sqrt(base^2+height^2));
	}
	public double SphereVolume(double a){
		return ((4.0/3.0)*(Math.PI)*Math.pow(a,3));
	}
	public String WaterTemp(double temp){
		return temp <=32 ? "Solid" : temp>32&&temp<=212 ? "Liquid" : temp>212 ? "Gas" : "Fail";
	}
	public int []  DoubleSeq(int [] a){
		return Arrays.stream(a).map(n->n*2).toArray();
	}
	public String DuplicateSeq(String[] a){
		return Arrays.stream(a).map(s->s+" "+s).collect(Collectors.toList()).toString();
	}
	public String RemoveDuplicate(String [] a){
		return Arrays.stream(a).distinct().collect(Collectors.toList()).toString();
	}
	public String SumProduct(int [] a,Function<int[], Integer> sum, Function<int [],Integer> product){
		return "Product: "+product.apply(a)+" Sum: "+sum.apply(a);
	}
	public String PosList(int[] a){
		return Arrays.toString(Arrays.stream(a).filter(n->n>0).toArray());
	}
	public int MaxFind(int[] a){
		return Arrays.stream(a).max().getAsInt();
	}
	public String NSquares(int a){
		return Arrays.toString(IntStream.range(0, a+1).map(n->n*n).toArray());
	}
	public String Translation(String phrase){
		String[] thePhrase = phrase.split(" |\\.");
		return Arrays.toString(Arrays.stream(thePhrase).map(s->getWord(s)).toArray());
	}
	public String getWord(String input){ //http://www.oracle.com/technetwork/articles/java/architect-streams-pt2-2227132.html
		HashMap<String, String> dict=new HashMap<String, String>();
		dict.put("Some", "Manche");
		dict.put("say", "meinen");
		dict.put("that", "das");
		dict.put("programming", "Programmieren");
		dict.put("is", "sei");
		dict.put("an", "eine");
		dict.put("art", "Kunst");
		return dict.get(input);
	}
	public String CountArticles(String message){
		List<String> themessage = Arrays.asList("hello","test");
		 Stream<String> streams = themessage.stream();
		 
	        // map each word to it total number of occurrences
	        Map<String, Long> wordCount = streams.map(w -> w.split(" "))
	                // return Stream<String[]>
	                .flatMap(Arrays::stream)
	                // flatten to Stream<String>
	                // strip non-alphanumerics and uppercase all
	                //.filter()
	                .collect(
	                        Collectors.groupingBy(Function.identity(),
	                                Collectors.counting())); // map word strings to
	                                                            // count
	 
		return "";
	}
}
